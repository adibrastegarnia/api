syntax = "proto3";

package atomix.value;

import "google/protobuf/duration.proto";
import "atomix/headers/headers.proto";
import "gogoproto/gogo.proto";

message CreateRequest {
    atomix.headers.RequestHeader header = 1;
    google.protobuf.Duration timeout = 2 [(gogoproto.stdduration) = true];
}

message CreateResponse {
    atomix.headers.ResponseHeader header = 1;
}

message KeepAliveRequest {
    atomix.headers.RequestHeader header = 1;
}

message KeepAliveResponse {
    atomix.headers.ResponseHeader header = 1;
}

message CloseRequest {
    atomix.headers.RequestHeader header = 1;
    bool delete = 2;
}

message CloseResponse {
    atomix.headers.ResponseHeader header = 1;
}

message GetRequest {
    atomix.headers.RequestHeader header = 1;
}

message GetResponse {
    atomix.headers.ResponseHeader header = 1;
    bytes value = 2;
    uint64 version = 3;
}

message SetRequest {
    atomix.headers.RequestHeader header = 1;
    uint64 expect_version = 2;
    bytes expect_value = 3;
    bytes value = 4;
}

message SetResponse {
    atomix.headers.ResponseHeader header = 1;
    uint64 version = 2;
    bool succeeded = 3;
}

message EventRequest {
    atomix.headers.RequestHeader header = 1;
}

message EventResponse {
    atomix.headers.ResponseHeader header = 1;
    Type type = 2;
    bytes previous_value = 3;
    uint64 previous_version = 4;
    bytes new_value = 5;
    uint64 new_version = 6;

    enum Type {
        UPDATED = 0;
        OPEN = 1;
    }
}

// Value service
service ValueService {

    rpc Create (CreateRequest) returns (CreateResponse) {

    }

    rpc KeepAlive (KeepAliveRequest) returns (KeepAliveResponse) {

    }

    rpc Close (CloseRequest) returns (CloseResponse) {

    }

    rpc Set (SetRequest) returns (SetResponse) {

    }

    rpc Get (GetRequest) returns (GetResponse) {

    }

    rpc Events (EventRequest) returns (stream EventResponse) {

    }

}
