// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: atomix/controller/database.proto

package controller

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Database identifier
type DatabaseId struct {
	// name is the name of the database
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// namespace is the namespace to which the database belongs
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseId) Reset()         { *m = DatabaseId{} }
func (m *DatabaseId) String() string { return proto.CompactTextString(m) }
func (*DatabaseId) ProtoMessage()    {}
func (*DatabaseId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b4500d882e40b81, []int{0}
}
func (m *DatabaseId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseId.Unmarshal(m, b)
}
func (m *DatabaseId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseId.Marshal(b, m, deterministic)
}
func (m *DatabaseId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseId.Merge(m, src)
}
func (m *DatabaseId) XXX_Size() int {
	return xxx_messageInfo_DatabaseId.Size(m)
}
func (m *DatabaseId) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseId.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseId proto.InternalMessageInfo

func (m *DatabaseId) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DatabaseId) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

// Database configuration
type Database struct {
	// id is the database identifier
	ID *DatabaseId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// clusters is a list of clusters in the database
	Clusters []*Cluster `protobuf:"bytes,2,rep,name=clusters,proto3" json:"clusters,omitempty"`
	// partitions is a list of partitions in the cluster
	Partitions           []*Partition `protobuf:"bytes,3,rep,name=partitions,proto3" json:"partitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Database) Reset()         { *m = Database{} }
func (m *Database) String() string { return proto.CompactTextString(m) }
func (*Database) ProtoMessage()    {}
func (*Database) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b4500d882e40b81, []int{1}
}
func (m *Database) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Database.Unmarshal(m, b)
}
func (m *Database) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Database.Marshal(b, m, deterministic)
}
func (m *Database) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Database.Merge(m, src)
}
func (m *Database) XXX_Size() int {
	return xxx_messageInfo_Database.Size(m)
}
func (m *Database) XXX_DiscardUnknown() {
	xxx_messageInfo_Database.DiscardUnknown(m)
}

var xxx_messageInfo_Database proto.InternalMessageInfo

func (m *Database) GetID() *DatabaseId {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *Database) GetClusters() []*Cluster {
	if m != nil {
		return m.Clusters
	}
	return nil
}

func (m *Database) GetPartitions() []*Partition {
	if m != nil {
		return m.Partitions
	}
	return nil
}

// Cluster identifier
type ClusterId struct {
	// id is the unique numeric identifier for the cluster
	ID int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// database_id is the identifier for the database to which the cluster belonds
	DatabaseID           *DatabaseId `protobuf:"bytes,2,opt,name=database_id,json=databaseId,proto3" json:"database_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ClusterId) Reset()         { *m = ClusterId{} }
func (m *ClusterId) String() string { return proto.CompactTextString(m) }
func (*ClusterId) ProtoMessage()    {}
func (*ClusterId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b4500d882e40b81, []int{2}
}
func (m *ClusterId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterId.Unmarshal(m, b)
}
func (m *ClusterId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterId.Marshal(b, m, deterministic)
}
func (m *ClusterId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterId.Merge(m, src)
}
func (m *ClusterId) XXX_Size() int {
	return xxx_messageInfo_ClusterId.Size(m)
}
func (m *ClusterId) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterId.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterId proto.InternalMessageInfo

func (m *ClusterId) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *ClusterId) GetDatabaseID() *DatabaseId {
	if m != nil {
		return m.DatabaseID
	}
	return nil
}

// Cluster configuration
type Cluster struct {
	// id is the cluster identifier
	ID *ClusterId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// partitions is a list of partitions in the cluster
	Partitions           []*Partition `protobuf:"bytes,2,rep,name=partitions,proto3" json:"partitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Cluster) Reset()         { *m = Cluster{} }
func (m *Cluster) String() string { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()    {}
func (*Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b4500d882e40b81, []int{3}
}
func (m *Cluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster.Unmarshal(m, b)
}
func (m *Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster.Marshal(b, m, deterministic)
}
func (m *Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster.Merge(m, src)
}
func (m *Cluster) XXX_Size() int {
	return xxx_messageInfo_Cluster.Size(m)
}
func (m *Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster proto.InternalMessageInfo

func (m *Cluster) GetID() *ClusterId {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *Cluster) GetPartitions() []*Partition {
	if m != nil {
		return m.Partitions
	}
	return nil
}

// Cluster configuration
type ClusterConfig struct {
	// members is a list of cluster members
	Members []*MemberConfig `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
	// partitions is a list of partitions owned by the cluster
	Partitions           []*PartitionId `protobuf:"bytes,2,rep,name=partitions,proto3" json:"partitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ClusterConfig) Reset()         { *m = ClusterConfig{} }
func (m *ClusterConfig) String() string { return proto.CompactTextString(m) }
func (*ClusterConfig) ProtoMessage()    {}
func (*ClusterConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b4500d882e40b81, []int{4}
}
func (m *ClusterConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterConfig.Unmarshal(m, b)
}
func (m *ClusterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterConfig.Marshal(b, m, deterministic)
}
func (m *ClusterConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterConfig.Merge(m, src)
}
func (m *ClusterConfig) XXX_Size() int {
	return xxx_messageInfo_ClusterConfig.Size(m)
}
func (m *ClusterConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterConfig proto.InternalMessageInfo

func (m *ClusterConfig) GetMembers() []*MemberConfig {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *ClusterConfig) GetPartitions() []*PartitionId {
	if m != nil {
		return m.Partitions
	}
	return nil
}

// Member configuration
type MemberConfig struct {
	// id is the unique member identifier
	ID string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// host is the member host
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	// api_port is the port to use for the client API
	APIPort int32 `protobuf:"varint,3,opt,name=api_port,json=apiPort,proto3" json:"apiPort"`
	// protocol_port is the port to use for intra-cluster communication
	ProtocolPort         int32    `protobuf:"varint,4,opt,name=protocol_port,json=protocolPort,proto3" json:"protocolPort"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemberConfig) Reset()         { *m = MemberConfig{} }
func (m *MemberConfig) String() string { return proto.CompactTextString(m) }
func (*MemberConfig) ProtoMessage()    {}
func (*MemberConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b4500d882e40b81, []int{5}
}
func (m *MemberConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemberConfig.Unmarshal(m, b)
}
func (m *MemberConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemberConfig.Marshal(b, m, deterministic)
}
func (m *MemberConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberConfig.Merge(m, src)
}
func (m *MemberConfig) XXX_Size() int {
	return xxx_messageInfo_MemberConfig.Size(m)
}
func (m *MemberConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MemberConfig proto.InternalMessageInfo

func (m *MemberConfig) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *MemberConfig) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *MemberConfig) GetAPIPort() int32 {
	if m != nil {
		return m.APIPort
	}
	return 0
}

func (m *MemberConfig) GetProtocolPort() int32 {
	if m != nil {
		return m.ProtocolPort
	}
	return 0
}

// Partition identifier
type PartitionId struct {
	Partition            int32             `protobuf:"varint,1,opt,name=partition,proto3" json:"partition,omitempty"`
	Group                *PartitionGroupId `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"` // Deprecated: Do not use.
	Cluster              *ClusterId        `protobuf:"bytes,3,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PartitionId) Reset()         { *m = PartitionId{} }
func (m *PartitionId) String() string { return proto.CompactTextString(m) }
func (*PartitionId) ProtoMessage()    {}
func (*PartitionId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b4500d882e40b81, []int{6}
}
func (m *PartitionId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionId.Unmarshal(m, b)
}
func (m *PartitionId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionId.Marshal(b, m, deterministic)
}
func (m *PartitionId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionId.Merge(m, src)
}
func (m *PartitionId) XXX_Size() int {
	return xxx_messageInfo_PartitionId.Size(m)
}
func (m *PartitionId) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionId.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionId proto.InternalMessageInfo

func (m *PartitionId) GetPartition() int32 {
	if m != nil {
		return m.Partition
	}
	return 0
}

// Deprecated: Do not use.
func (m *PartitionId) GetGroup() *PartitionGroupId {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *PartitionId) GetCluster() *ClusterId {
	if m != nil {
		return m.Cluster
	}
	return nil
}

// Partition group name
//
// Deprecated: Do not use.
type PartitionGroupId struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartitionGroupId) Reset()         { *m = PartitionGroupId{} }
func (m *PartitionGroupId) String() string { return proto.CompactTextString(m) }
func (*PartitionGroupId) ProtoMessage()    {}
func (*PartitionGroupId) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b4500d882e40b81, []int{7}
}
func (m *PartitionGroupId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionGroupId.Unmarshal(m, b)
}
func (m *PartitionGroupId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionGroupId.Marshal(b, m, deterministic)
}
func (m *PartitionGroupId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionGroupId.Merge(m, src)
}
func (m *PartitionGroupId) XXX_Size() int {
	return xxx_messageInfo_PartitionGroupId.Size(m)
}
func (m *PartitionGroupId) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionGroupId.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionGroupId proto.InternalMessageInfo

func (m *PartitionGroupId) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PartitionGroupId) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

// Partition configuration
//
// Deprecated: Do not use.
type PartitionConfig struct {
	Partition            *PartitionId   `protobuf:"bytes,1,opt,name=partition,proto3" json:"partition,omitempty"`
	Controller           *NodeConfig    `protobuf:"bytes,2,opt,name=controller,proto3" json:"controller,omitempty"`
	Members              []*NodeConfig  `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"`
	Partitions           []*PartitionId `protobuf:"bytes,4,rep,name=partitions,proto3" json:"partitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PartitionConfig) Reset()         { *m = PartitionConfig{} }
func (m *PartitionConfig) String() string { return proto.CompactTextString(m) }
func (*PartitionConfig) ProtoMessage()    {}
func (*PartitionConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b4500d882e40b81, []int{8}
}
func (m *PartitionConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionConfig.Unmarshal(m, b)
}
func (m *PartitionConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionConfig.Marshal(b, m, deterministic)
}
func (m *PartitionConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionConfig.Merge(m, src)
}
func (m *PartitionConfig) XXX_Size() int {
	return xxx_messageInfo_PartitionConfig.Size(m)
}
func (m *PartitionConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionConfig proto.InternalMessageInfo

func (m *PartitionConfig) GetPartition() *PartitionId {
	if m != nil {
		return m.Partition
	}
	return nil
}

func (m *PartitionConfig) GetController() *NodeConfig {
	if m != nil {
		return m.Controller
	}
	return nil
}

func (m *PartitionConfig) GetMembers() []*NodeConfig {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *PartitionConfig) GetPartitions() []*PartitionId {
	if m != nil {
		return m.Partitions
	}
	return nil
}

// Node configuration
//
// Deprecated: Do not use.
type NodeConfig struct {
	ID                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	APIPort              int32    `protobuf:"varint,4,opt,name=api_port,json=apiPort,proto3" json:"apiPort"`
	ProtocolPort         int32    `protobuf:"varint,5,opt,name=protocol_port,json=protocolPort,proto3" json:"protocolPort"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeConfig) Reset()         { *m = NodeConfig{} }
func (m *NodeConfig) String() string { return proto.CompactTextString(m) }
func (*NodeConfig) ProtoMessage()    {}
func (*NodeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b4500d882e40b81, []int{9}
}
func (m *NodeConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeConfig.Unmarshal(m, b)
}
func (m *NodeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeConfig.Marshal(b, m, deterministic)
}
func (m *NodeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeConfig.Merge(m, src)
}
func (m *NodeConfig) XXX_Size() int {
	return xxx_messageInfo_NodeConfig.Size(m)
}
func (m *NodeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_NodeConfig proto.InternalMessageInfo

func (m *NodeConfig) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *NodeConfig) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *NodeConfig) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *NodeConfig) GetAPIPort() int32 {
	if m != nil {
		return m.APIPort
	}
	return 0
}

func (m *NodeConfig) GetProtocolPort() int32 {
	if m != nil {
		return m.ProtocolPort
	}
	return 0
}

// Partition group info
//
// Deprecated: Do not use.
type PartitionGroup struct {
	ID                   *PartitionGroupId   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Spec                 *PartitionGroupSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Partitions           []*Partition        `protobuf:"bytes,3,rep,name=partitions,proto3" json:"partitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PartitionGroup) Reset()         { *m = PartitionGroup{} }
func (m *PartitionGroup) String() string { return proto.CompactTextString(m) }
func (*PartitionGroup) ProtoMessage()    {}
func (*PartitionGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b4500d882e40b81, []int{10}
}
func (m *PartitionGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionGroup.Unmarshal(m, b)
}
func (m *PartitionGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionGroup.Marshal(b, m, deterministic)
}
func (m *PartitionGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionGroup.Merge(m, src)
}
func (m *PartitionGroup) XXX_Size() int {
	return xxx_messageInfo_PartitionGroup.Size(m)
}
func (m *PartitionGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionGroup.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionGroup proto.InternalMessageInfo

func (m *PartitionGroup) GetID() *PartitionGroupId {
	if m != nil {
		return m.ID
	}
	return nil
}

func (m *PartitionGroup) GetSpec() *PartitionGroupSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *PartitionGroup) GetPartitions() []*Partition {
	if m != nil {
		return m.Partitions
	}
	return nil
}

// Partition info
type Partition struct {
	PartitionID          int32                `protobuf:"varint,1,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	Endpoints            []*PartitionEndpoint `protobuf:"bytes,2,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Partition) Reset()         { *m = Partition{} }
func (m *Partition) String() string { return proto.CompactTextString(m) }
func (*Partition) ProtoMessage()    {}
func (*Partition) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b4500d882e40b81, []int{11}
}
func (m *Partition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Partition.Unmarshal(m, b)
}
func (m *Partition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Partition.Marshal(b, m, deterministic)
}
func (m *Partition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Partition.Merge(m, src)
}
func (m *Partition) XXX_Size() int {
	return xxx_messageInfo_Partition.Size(m)
}
func (m *Partition) XXX_DiscardUnknown() {
	xxx_messageInfo_Partition.DiscardUnknown(m)
}

var xxx_messageInfo_Partition proto.InternalMessageInfo

func (m *Partition) GetPartitionID() int32 {
	if m != nil {
		return m.PartitionID
	}
	return 0
}

func (m *Partition) GetEndpoints() []*PartitionEndpoint {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

// Partition endpoint
type PartitionEndpoint struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PartitionEndpoint) Reset()         { *m = PartitionEndpoint{} }
func (m *PartitionEndpoint) String() string { return proto.CompactTextString(m) }
func (*PartitionEndpoint) ProtoMessage()    {}
func (*PartitionEndpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b4500d882e40b81, []int{12}
}
func (m *PartitionEndpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionEndpoint.Unmarshal(m, b)
}
func (m *PartitionEndpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionEndpoint.Marshal(b, m, deterministic)
}
func (m *PartitionEndpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionEndpoint.Merge(m, src)
}
func (m *PartitionEndpoint) XXX_Size() int {
	return xxx_messageInfo_PartitionEndpoint.Size(m)
}
func (m *PartitionEndpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionEndpoint.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionEndpoint proto.InternalMessageInfo

func (m *PartitionEndpoint) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *PartitionEndpoint) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// Partition group specification
//
// Deprecated: Do not use.
type PartitionGroupSpec struct {
	Partitions           uint32     `protobuf:"varint,1,opt,name=partitions,proto3" json:"partitions,omitempty"`
	PartitionSize        uint32     `protobuf:"varint,2,opt,name=partition_size,json=partitionSize,proto3" json:"partition_size,omitempty"`
	Protocol             *types.Any `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PartitionGroupSpec) Reset()         { *m = PartitionGroupSpec{} }
func (m *PartitionGroupSpec) String() string { return proto.CompactTextString(m) }
func (*PartitionGroupSpec) ProtoMessage()    {}
func (*PartitionGroupSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b4500d882e40b81, []int{13}
}
func (m *PartitionGroupSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionGroupSpec.Unmarshal(m, b)
}
func (m *PartitionGroupSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionGroupSpec.Marshal(b, m, deterministic)
}
func (m *PartitionGroupSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionGroupSpec.Merge(m, src)
}
func (m *PartitionGroupSpec) XXX_Size() int {
	return xxx_messageInfo_PartitionGroupSpec.Size(m)
}
func (m *PartitionGroupSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionGroupSpec.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionGroupSpec proto.InternalMessageInfo

func (m *PartitionGroupSpec) GetPartitions() uint32 {
	if m != nil {
		return m.Partitions
	}
	return 0
}

func (m *PartitionGroupSpec) GetPartitionSize() uint32 {
	if m != nil {
		return m.PartitionSize
	}
	return 0
}

func (m *PartitionGroupSpec) GetProtocol() *types.Any {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func init() {
	proto.RegisterType((*DatabaseId)(nil), "atomix.controller.DatabaseId")
	proto.RegisterType((*Database)(nil), "atomix.controller.Database")
	proto.RegisterType((*ClusterId)(nil), "atomix.controller.ClusterId")
	proto.RegisterType((*Cluster)(nil), "atomix.controller.Cluster")
	proto.RegisterType((*ClusterConfig)(nil), "atomix.controller.ClusterConfig")
	proto.RegisterType((*MemberConfig)(nil), "atomix.controller.MemberConfig")
	proto.RegisterType((*PartitionId)(nil), "atomix.controller.PartitionId")
	proto.RegisterType((*PartitionGroupId)(nil), "atomix.controller.PartitionGroupId")
	proto.RegisterType((*PartitionConfig)(nil), "atomix.controller.PartitionConfig")
	proto.RegisterType((*NodeConfig)(nil), "atomix.controller.NodeConfig")
	proto.RegisterType((*PartitionGroup)(nil), "atomix.controller.PartitionGroup")
	proto.RegisterType((*Partition)(nil), "atomix.controller.Partition")
	proto.RegisterType((*PartitionEndpoint)(nil), "atomix.controller.PartitionEndpoint")
	proto.RegisterType((*PartitionGroupSpec)(nil), "atomix.controller.PartitionGroupSpec")
}

func init() { proto.RegisterFile("atomix/controller/database.proto", fileDescriptor_6b4500d882e40b81) }

var fileDescriptor_6b4500d882e40b81 = []byte{
	// 721 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xcd, 0x4e, 0xdb, 0x40,
	0x10, 0xd6, 0x1a, 0x43, 0x92, 0x09, 0xe1, 0x67, 0x84, 0x90, 0x8b, 0x28, 0x46, 0x6e, 0x91, 0x38,
	0x39, 0x2d, 0x2d, 0x54, 0x14, 0x8a, 0x04, 0xa4, 0x6a, 0x73, 0x28, 0x42, 0xcb, 0x03, 0x20, 0x27,
	0x36, 0xa9, 0xa5, 0xc4, 0x6b, 0xd9, 0x46, 0x2a, 0x48, 0x3d, 0xf5, 0xd6, 0x9e, 0xfa, 0x0a, 0x55,
	0xdf, 0xa1, 0x52, 0x1f, 0xa1, 0x0f, 0x91, 0x43, 0x8e, 0x3c, 0x45, 0xe5, 0xf5, 0xda, 0x6b, 0x43,
	0x48, 0x48, 0x7b, 0xca, 0x64, 0xf7, 0xfb, 0x26, 0xf3, 0xcd, 0x7c, 0xb3, 0x0a, 0xac, 0x5b, 0x11,
	0xeb, 0xb9, 0x9f, 0xea, 0x6d, 0xe6, 0x45, 0x01, 0xeb, 0x76, 0x9d, 0xa0, 0x6e, 0x5b, 0x91, 0xd5,
	0xb2, 0x42, 0xc7, 0xf4, 0x03, 0x16, 0x31, 0x5c, 0x4c, 0x10, 0xa6, 0x44, 0xac, 0x3c, 0xea, 0x30,
	0xd6, 0xe9, 0x3a, 0x75, 0x0e, 0x68, 0x5d, 0x5e, 0xd4, 0x2d, 0xef, 0x2a, 0x41, 0xaf, 0x2c, 0x75,
	0x58, 0x87, 0xf1, 0xb0, 0x1e, 0x47, 0xc9, 0xa9, 0x71, 0x00, 0xd0, 0x10, 0x59, 0x9b, 0x36, 0x22,
	0xa8, 0x9e, 0xd5, 0x73, 0x34, 0xb2, 0x4e, 0x36, 0x2b, 0x94, 0xc7, 0xb8, 0x0a, 0x95, 0xf8, 0x33,
	0xf4, 0xad, 0xb6, 0xa3, 0x29, 0xfc, 0x42, 0x1e, 0x18, 0xbf, 0x08, 0x94, 0xd3, 0x04, 0xb8, 0x0d,
	0x8a, 0x6b, 0x73, 0x72, 0x75, 0xeb, 0xb1, 0x79, 0xa7, 0x3a, 0x53, 0xfe, 0xd2, 0xd1, 0xcc, 0xa0,
	0xaf, 0x2b, 0xcd, 0x06, 0x55, 0x5c, 0x1b, 0x77, 0xa0, 0xdc, 0xee, 0x5e, 0x86, 0x91, 0x13, 0x84,
	0x9a, 0xb2, 0x3e, 0xb5, 0x59, 0xdd, 0x5a, 0x19, 0x42, 0x3e, 0x4e, 0x20, 0x34, 0xc3, 0xe2, 0x3e,
	0x80, 0x6f, 0x05, 0x91, 0x1b, 0xb9, 0xcc, 0x0b, 0xb5, 0x29, 0xce, 0x5c, 0x1d, 0xc2, 0x3c, 0x4d,
	0x41, 0x34, 0x87, 0x37, 0x42, 0xa8, 0x88, 0x94, 0x4d, 0x1b, 0x97, 0xb3, 0xca, 0xa7, 0x0b, 0xa5,
	0x9d, 0x40, 0x35, 0x6d, 0xfa, 0xb9, 0x6b, 0x73, 0xf9, 0x63, 0xa5, 0xcd, 0x0d, 0xfa, 0xba, 0x6c,
	0x6a, 0x83, 0x82, 0x9d, 0xdd, 0x19, 0x9f, 0xa1, 0x24, 0x7e, 0x14, 0x5f, 0xe6, 0x9a, 0xb5, 0x7a,
	0xbf, 0xde, 0x5b, 0xbd, 0x2a, 0x6a, 0x56, 0x26, 0xd4, 0xfc, 0x95, 0x40, 0x4d, 0xe4, 0x3d, 0x66,
	0xde, 0x85, 0xdb, 0xc1, 0x5d, 0x28, 0xf5, 0x9c, 0x5e, 0x2b, 0x6e, 0x3d, 0xe1, 0xc9, 0xf4, 0x21,
	0xc9, 0x3e, 0x70, 0x44, 0xc2, 0xa0, 0x29, 0x1e, 0x0f, 0x86, 0x94, 0xb2, 0x36, 0xaa, 0x94, 0xa6,
	0x5d, 0x28, 0xe6, 0x27, 0x81, 0xd9, 0x7c, 0xe6, 0xdc, 0x10, 0x2a, 0x05, 0xcd, 0x08, 0xea, 0x47,
	0x16, 0x46, 0xc2, 0x7c, 0x3c, 0xc6, 0xe7, 0x50, 0xb6, 0x7c, 0xf7, 0xdc, 0x67, 0x41, 0xa4, 0x4d,
	0xf1, 0xb1, 0x2d, 0x0f, 0xfa, 0x7a, 0xe9, 0xf0, 0xb4, 0x79, 0xca, 0x82, 0xe8, 0xa6, 0xaf, 0x97,
	0x2c, 0xdf, 0x8d, 0x43, 0x9a, 0x06, 0xb8, 0x0d, 0x35, 0xee, 0xf9, 0x36, 0xeb, 0x26, 0x3c, 0x95,
	0xf3, 0x16, 0x6e, 0xfa, 0xfa, 0x6c, 0x7a, 0xc1, 0x19, 0x85, 0x6f, 0xc6, 0x0f, 0x02, 0xd5, 0x9c,
	0x84, 0x78, 0x1f, 0x32, 0x11, 0x89, 0x63, 0xa8, 0x3c, 0xc0, 0x37, 0x30, 0xdd, 0x09, 0xd8, 0xa5,
	0x2f, 0xac, 0xf2, 0x64, 0x54, 0x3f, 0xde, 0xc5, 0xc0, 0xa6, 0x7d, 0xa4, 0x68, 0x84, 0x26, 0x2c,
	0xdc, 0x81, 0x92, 0xb0, 0x37, 0x57, 0x35, 0xc6, 0x19, 0x34, 0x05, 0x1b, 0xef, 0x61, 0xe1, 0x76,
	0xda, 0xc9, 0x97, 0xf9, 0xb5, 0xa2, 0x11, 0xe3, 0x9b, 0x02, 0xf3, 0x59, 0x2a, 0x31, 0x98, 0xfd,
	0xdb, 0x92, 0xc7, 0x0f, 0xba, 0xd0, 0x12, 0x90, 0xa0, 0x11, 0x2b, 0x74, 0xc2, 0x6c, 0x47, 0x78,
	0x2c, 0x47, 0xc0, 0x57, 0xd2, 0xa1, 0xc9, 0x8a, 0x8f, 0xe1, 0xde, 0xe3, 0x4f, 0x75, 0x52, 0x7f,
	0xf2, 0x6e, 0xfc, 0x26, 0x00, 0x32, 0xf7, 0x44, 0x0e, 0x45, 0x50, 0xa5, 0x3b, 0x29, 0x8f, 0x0b,
	0xae, 0x55, 0xff, 0xd1, 0xb5, 0xd3, 0x0f, 0x71, 0x2d, 0x2f, 0xfe, 0x0f, 0x81, 0xb9, 0xa2, 0x2b,
	0x70, 0x2f, 0xf7, 0xe8, 0x3c, 0xc8, 0x9b, 0x79, 0x95, 0xbb, 0xa0, 0x86, 0xbe, 0xd3, 0x16, 0x23,
	0xdc, 0x18, 0x4b, 0x3f, 0xf3, 0x9d, 0x36, 0xe5, 0x94, 0xff, 0x7b, 0xaa, 0xb9, 0x98, 0x2f, 0x04,
	0x2a, 0xd9, 0x2d, 0x6e, 0xc1, 0x6c, 0x76, 0x7f, 0x9e, 0xbd, 0xdc, 0xf3, 0x83, 0xbe, 0x9e, 0xdb,
	0xd5, 0x06, 0xad, 0xfa, 0xb9, 0xc5, 0x3d, 0x82, 0x8a, 0xe3, 0xd9, 0x3e, 0x73, 0xbd, 0x28, 0x7d,
	0xae, 0x9e, 0x8e, 0x2a, 0xe1, 0xad, 0x00, 0x53, 0x49, 0x33, 0xf6, 0x60, 0xf1, 0xce, 0x7d, 0x36,
	0x7d, 0x32, 0x64, 0xfa, 0x8a, 0x9c, 0xbe, 0xf1, 0x9d, 0x00, 0xde, 0xed, 0x10, 0xae, 0x15, 0x7a,
	0x13, 0x27, 0xa9, 0xe5, 0xd5, 0xe3, 0x06, 0xcc, 0x49, 0xad, 0xa1, 0x7b, 0x9d, 0x2c, 0x6e, 0x8d,
	0xd6, 0xb2, 0xd3, 0x33, 0xf7, 0xda, 0xc1, 0x67, 0x50, 0x4e, 0x1d, 0x20, 0xde, 0x8e, 0x25, 0x33,
	0xf9, 0x37, 0x60, 0xa6, 0xff, 0x06, 0xcc, 0x43, 0xef, 0x8a, 0x66, 0xa8, 0xb8, 0xad, 0xad, 0x19,
	0xfe, 0xed, 0xc5, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xae, 0xda, 0x26, 0xfb, 0x6e, 0x08, 0x00,
	0x00,
}
